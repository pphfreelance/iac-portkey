name: Deploy Dev Infrastructure 

on:
  workflow_dispatch:  # Allows manual triggering

jobs:
  # VPC Stage
  deploy_vpc:
    runs-on: ubuntu-latest
    steps:
    # Checkout the repository
    - name: Checkout repository
      uses: actions/checkout@v3

    # Configure AWS Credentials
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    # Setup Terraform
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1

    # Initialize and apply Terraform for VPC
    - name: Deploy VPC
      working-directory: ./dev/vpc  
      run: |
        terraform init --backend-config=../../backend.json
        terraform apply -var-file=../env.json -auto-approve

  # Transit Gateway Stage
  deploy_transit_gw:
    runs-on: ubuntu-latest
    steps:
    # Checkout the repository
    - name: Checkout repository
      uses: actions/checkout@v3

    # Configure AWS Credentials
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    # Setup Terraform
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1

    # Initialize and apply Terraform for Transit Gateway
    - name: Deploy Transit Gateway
      working-directory: ./dev/transit_gw  
      run: |
        terraform init --backend-config=../../backend.json
        terraform apply -var-file=../env.json -auto-approve

  # S3 Logs Stage
  deploy_s3_logs:
    runs-on: ubuntu-latest
    steps:
    # Checkout the repository
    - name: Checkout repository
      uses: actions/checkout@v3

    # Configure AWS Credentials
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    # Setup Terraform
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1

    # Initialize and apply Terraform for S3 Logs
    - name: Deploy S3 Logs
      working-directory: ./dev/s3-logs  
      run: |
        terraform init --backend-config=../../backend.json
        terraform apply -var-file=../env.json -auto-approve

  # RDS Stage
  deploy_rds:
    runs-on: ubuntu-latest
    steps:
    # Checkout the repository
    - name: Checkout repository
      uses: actions/checkout@v3

    # Configure AWS Credentials
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    # Setup Terraform
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1

    # Initialize and apply Terraform for RDS
    - name: Deploy RDS
      working-directory: ./dev/rds  
      run: |
        terraform init --backend-config=../../backend.json
        terraform apply -var-file=../env.json -auto-approve

  # EKS Stage
  deploy_eks:
    runs-on: ubuntu-latest
    steps:
    # Checkout the repository
    - name: Checkout repository
      uses: actions/checkout@v3

    # Configure AWS Credentials
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    # Setup Terraform
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1

    # Initialize and apply Terraform for EKS
    - name: Deploy EKS
      working-directory: ./dev/eks  
      run: |
        terraform init --backend-config=../../backend.json
        terraform apply -var-file=../env.json -auto-approve

  # ElastiCache Stage
  deploy_elasticache:
    runs-on: ubuntu-latest
    steps:
    # Checkout the repository
    - name: Checkout repository
      uses: actions/checkout@v3

    # Configure AWS Credentials
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    # Setup Terraform
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1

    # Initialize and apply Terraform for ElastiCache
    - name: Deploy ElastiCache
      working-directory: ./dev/elasticache  
      run: |
        terraform init --backend-config=../../backend.json
        terraform apply -var-file=../env.json -auto-approve
